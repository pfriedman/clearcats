- if @people.blank?
  .no_records No clients were found.
- else
  .page_entries_info
    = page_entries_info @people, :entry_name => "record"
  - form_tag(update_ctsa_reporting_year_people_path) do
    - current_year = current_ctsa_reporting_year
    - if params[:page]
      = hidden_field_tag "page", params[:page]
    - if params[:search]
      - params[:search].each do |k, v| 
        = hidden_field_tag "search[#{k}]", v
    %table{ :class => "records" }
      %tr
        %th CTSA Reportable #{current_year}
        %th Select
        %th= order @search, :by => :first_name, :as => "First Name", :params => {:criteria => params[:criteria]}
        %th= order @search, :by => :last_name, :as => "Last Name", :params => {:criteria => params[:criteria]}
        %th= order @search, :by => :netid, :as => "Net ID", :params => {:criteria => params[:criteria]}
        %th= order @search, :by => :employeeid, :as => "Employee ID", :params => {:criteria => params[:criteria]}
        %th= order @search, :by => :email, :as => "Email", :params => {:criteria => params[:criteria]}
        %th= order @search, :by => :era_commons_username, :as => "ERA Commons", :params => {:criteria => params[:criteria]}
        %th= order @search, :by => :degree_type_one_name, :as => "Degree Type One", :params => {:criteria => params[:criteria]}
        %th= order @search, :by => :degree_type_two_name, :as => "Degree Type Two", :params => {:criteria => params[:criteria]}
        %th= order @search, :by => :institution_positions_name, :as => "Position/Title", :params => {:criteria => params[:criteria]}
        %th Reporting Years
        %th History

      - @people.each do |person|
        %tr{ :class => cycle('even_record', 'odd_record') }
          %td
            = check_box_tag "people_ids[]", person.id, person.ctsa_reporting_years.include?(current_year)
          %td= link_to 'Edit', edit_person_path(person), :class => "edit_link icon_link"
          %td= h person.first_name
          %td= h person.last_name
          %td= h person.netid
          %td= h person.employeeid
          %td= h person.email
          %td= h person.era_commons_username
          %td= h person.degree_type_one
          %td= h person.degree_type_two
          %td= h person.institution_positions.map{|p| p.name}.to_sentence
          %td= h person.ctsa_reporting_years.blank? ? "n/a" : person.ctsa_reporting_years.join(",")
          %td= link_to 'View', versions_person_path(person), :class => "show_link icon_link"

    .buttons
      = submit_tag "Submit"

= will_paginate @people

/ Person.awards_ctsa_award_type_id_equals(35).awards_ctsa_award_type_type_equals("PhsOrganization")

/ #  first_name                                    :string(255)
/ #  middle_name                                   :string(255)
/ #  last_name                                     :string(255)
/ #  netid                                         :string(255)
/ #  email                                         :string(255)
/ #  department_affiliation                        :string(255)
/ #  school_affiliation                            :string(255)
/ #  last_four_of_ssn                              :string(255)
/ #  phone                                         :string(255)
/ #  era_commons_username                          :string(255)
/ #  employeeid                                    :string(255)
/ #  department_id                                 :integer
/ #  degree_type_one_id                            :integer
/ #  degree_type_two_id                            :integer
/ #  specialty_id                                  :integer
/ #  country_id                                    :integer
/ #  ethnic_type_id                                :integer
/ #  race_type_id                                  :integer
/ #  disadvantaged_background                      :boolean
/ #  created_at                                    :datetime
/ #  updated_at                                    :datetime
/ #  human_subject_protection_training_institution :string(255)
/ #  human_subject_protection_training_date        :date
/ #
/ 
/ class Person < ActiveRecord::Base
/   
/   belongs_to :department
/ 
/   has_many :services
/   has_many :awards
/   has_many :publications
/   has_many :approvals
/   has_and_belongs_to_many :institution_positions
/     
/   belongs_to :country
/   belongs_to :degree_type_one
/   belongs_to :degree_type_two
/   belongs_to :specialty
/   belongs_to :ethnic_type
/   belongs_to :race_type
/ 
/   validates_length_of :last_four_of_ssn, :is => 4, :if => proc { |obj| !obj.last_four_of_ssn.blank? }
/   
/   accepts_nested_attributes_for :awards, :allow_destroy => true
/   accepts_nested_attributes_for :publications, :allow_destroy => true
/   accepts_nested_attributes_for :approvals, :allow_destroy => true
/   
/   # attributes from faculty_web_service that are not persisted
/   attr_accessor :interests, :campus, :descriptions, :dv_abbr
/   attr_accessor :basis, :category, :dept_id, :career_track, :degree, :division
/   attr_accessor :joint, :rank, :employee_id, :division_id, :pmids, :centers, :secondary
/   attr_accessor :demographics