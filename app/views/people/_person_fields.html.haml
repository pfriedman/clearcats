- f.object.edited_by_user = true

.span-24
  .span-6.colborder
    %h4{ :class => "section_header" } Basic Information
    
    = hidden_field_tag "person[type]", "Client"
    = f.hidden_field :imported
    = f.hidden_field :edited_by_user
    
    %p
      = f.label :last_name, "Last Name" 
      %br
      = f.text_field :last_name

    %p
      = f.label :first_name, "First Name" 
      %br
      = f.text_field :first_name 

    %p
      = f.label :middle_name, "Middle Initial" 
      %br
      = f.text_field :middle_name 
      
    %p
      = f.label :netid, "Net ID"
      %br
      = f.text_field :netid
      
    %p
      = f.label :employeeid, "Employee ID"
      %br
      = f.text_field :employeeid

    %p
      = f.label :era_commons_username, "eRA Commons Username" 
      %span{ :class => "help_icon" }
        &nbsp;
      = render "/people/era_commons_username_tooltip"
      = f.text_field :era_commons_username
      
    %p 
      = f.label :email, "Email"
      %br
      = f.text_field :email

    %p
      = f.label :last_four_of_ssn, "Last 4 digits SSN" 
      %br
      = f.text_field :last_four_of_ssn 

    %p
      = f.label :gender, "Gender" 
      %br
      = f.select(:gender, Person::GENDERS.collect { |a| [ a.titleize, a ] }) 
      
    %p
      = f.label :country_id, "Country of Origin" 
      %br
      - usa = Country.find_by_name("UNITED STATES")
      - f.object.country_id = usa.id if f.object.country_id.blank?
      = f.select(:country_id, Country.all(:order => :name).collect { |a| [ a.name, a.id ] }, { :include_blank => "-- Select Country --" }) 
      
  .span-7.colborder
    %h4{ :class => "section_header" } Scholarly Information

    %p
      = f.label :institution_position_id, "What is your position/title category?"
      %br
      %span{ :class => "alt" } (check all that apply)
      %br
      - for institution_position in InstitutionPosition.all(:order => :id)
        %div
          = check_box_tag "person[institution_position_ids][]", institution_position.id, f.object.institution_positions.include?(institution_position)
          = institution_position.to_s

    %p
      = f.label :specialty_id, "Area of Expertise"
      %br
      %span{ :class => "alt" } (select the best description)
      %br
      = f.select(:specialty_id, Specialty.all(:order => :code).collect { |a| [ a.to_s, a.id ] }, { :include_blank => "-- Select Area of Expertise --" })            

    %p
      = f.label :department_affiliation, "Department Affiliation" 
      %br
      = f.text_field :department_affiliation 

    %p
      = f.label :school_affiliation, "School Affiliation" 
      %br
      = f.text_field :school_affiliation

  .span-6.last
    .trainee_toggler
      = link_to "Click Here if Scholar/Trainee", "javascript:void(0);", :onclick => "$('.trainee_fields').show(); $('.trainee_toggler').hide();"
      
    .trainee_fields
      = link_to "Hide Scholar/Trainee Fields", "javascript:void(0);", :onclick => "$('.trainee_fields').hide(); $('.trainee_toggler').show();"
    
    %h4{ :id => "trainee_header", :class => "trainee_fields" } Trainees Only
    
    .trainee_section.trainee_fields
      %p
        = f.label :mentor_era_commons_username, "Mentor ERA Commons Username"
        %br
        = f.text_field :mentor_era_commons_username
        %br
        = link_to "Lookup ERA Commons Username", { :controller => "people", :action => "era_commons_username_search" }, { :class => "search_link icon_link", :target => "_blank" }
    
    .trainee_section.trainee_fields
      %h4{ :class => "section_header" } Degree(s) Sought      
      %p
        = f.label :degree_type_one_id, "Degree Type 1" 
        %br
        = f.select(:degree_type_one_id, DegreeTypeOne.all.collect { |a| [ a.name, a.id ] }, { :include_blank => "-- Select Degree Type 1 --" }) 

      %p
        = f.label :degree_type_two_id, "Degree Type 2" 
        %br
        = f.select(:degree_type_two_id, DegreeTypeTwo.all.collect { |a| [ a.name, a.id ] }, { :include_blank => "-- Select Degree Type 2 --" }) 

    
    .trainee_section.trainee_fields
      %h4{ :class => "section_header" } Trainee Fields
      %p
        = f.label :training_type, "Training Type"
        %br
        = f.select(:training_type, Person::TRAINING_TYPES.collect { |a| [ a.titleize, a ] }, { :include_blank => "-- Select Training Type --" }) 

      %p
        = f.label :trainee_status, "Trainee Status"
        %br
        = f.select(:trainee_status, Person::TRAINEE_STATUSES.collect { |a| [ a.titleize, a ] }, { :include_blank => "-- Select Trainee Status --" })
    
      %p
        = f.label :appointment_date, "Appointment Date"
        %br
        = f.text_field :appointment_date, :class => "datepicker"
      
      %p
        = f.label :end_date, "End Date"
        %br
        = f.text_field :end_date, :class => "datepicker"
    
    .trainee_section.trainee_fields
      %h4{ :class => "section_header" } Diversity Information
      %p
        = f.label :ethnic_type_id, "Please indicate your ethnic background." 
        %br
        = f.select(:ethnic_type_id, EthnicType.all.collect { |a| [ a.to_s, a.id ] }, { :include_blank => "-- Select Ethnic Background --" }) 

      %p
        = f.label :race_type_id, "Please indicate your racial background." 
        %br
        = f.select(:race_type_id, RaceType.all.collect { |a| [ a.to_s, a.id ] }, { :include_blank => "-- Select Racial Background --" }) 

      %p
        Are you from a disadvantaged background?
        %br
        = radio_button_tag "person[disadvantaged_background]", true, f.object.disadvantaged_background == true
        = label_tag "person_disadvantaged_background_true", "Yes"
        %br
        = radio_button_tag "person[disadvantaged_background]", false, f.object.disadvantaged_background == false
        = label_tag "person_disadvantaged_background_false", "No"

      %p
        Do you have a disability?
        %br
        = radio_button_tag "person[has_disability]", true, f.object.has_disability == true
        = label_tag "person_has_disability_true", "Yes"
        %br
        = radio_button_tag "person[has_disability]", false, f.object.has_disability == false
        = label_tag "person_has_disability_false", "No"
