require 'spec_helper'

describe LatticeGridWebService do

  context "calling lattice grid" do
    
    context "to discover investigators" do
    
      it "should return faculty members who match a mesh term" do
        person = Factory(:person)
        FacultyWebService.stub!(:locate_one).and_return(person)
        LatticeGridWebService.stub!(:make_request).and_return(investigators_response)
        results = LatticeGridWebService.investigators_search('genetics')
        results.size.should == 3
        results.first.class.should == Person
      end
      
      it "should catch any exception and return no results" do
        LatticeGridWebService.stub!(:make_request).and_raise(Exception.new("test web service exception"))
        results = LatticeGridWebService.investigators_search('genetics')
        results.should be_empty
      end
      
    end

    context "to discover publications" do

      it "should return publication information for an investigator found from the faculty web svc" do
        person = Factory(:person)
        person.publications.size.should == 0
        
        FacultyWebService.stub!(:locate_one).and_return(person)
        LatticeGridWebService.stub!(:make_request).and_return(publications_response)
        results = LatticeGridWebService.investigator_publications_search('wakibbe')
        results.size.should == 2
        results.first.class.should == Publication
        results.first.pmid.should == "20180973"
        results.first.person.should == person
        results.first.publication_date.to_s.should == "2010-01-01"
        
        person = Person.find(person.id)
        person.publications.size.should == 2
      end
      
      it "should return publication information for an investigator who exists in the local db" do
        person = Factory(:person, :netid => "wakibbe")
        LatticeGridWebService.stub!(:make_request).and_return(publications_response)
        results = LatticeGridWebService.investigator_publications_search('wakibbe')
        results.size.should == 2
        results.first.class.should == Publication
        results.first.pmid.should == "20180973"
        results.first.person.should == person
        results.first.publication_date.to_s.should == "2010-01-01"
      end
      
      it "should catch any exception and return no results" do
        LatticeGridWebService.stub!(:make_request).and_raise(Exception.new("test web service exception"))
        results = LatticeGridWebService.investigator_publications_search('jdoe')
        results.should be_empty
      end
      
    end

  end

end

def investigators_response
  create_response('[{"investigator":{"updated_ip":null,"start_date":null,"last_login_failure":null,"end_date":null,"degrees":"MD","city":null,"address1":null,"updated_at":"2010-06-28T02:44:47Z","pubmed_limit_to_institution":false,"postal_code":null,"deleted_id":null,"appointment_basis":"FT","address2":null,"title":"Professor","last_successful_login":null,"deleted_ip":null,"ssn":null,"password_changed_id":null,"num_last_pubs_last_five_years":13,"nu_start_date":null,"deleted_at":null,"weekly_hours_min":35,"username":"mabecass","total_pubs_last_five_years":43,"password_changed_ip":null,"country":null,"business_phone":null,"appointment_type":"Regular","appointment_track":"Investigator-Clinician","num_intraunit_collaborators":9,"id":1,"employee_id":1021673,"total_pubs":87,"sex":null,"password_changed_at":null,"num_last_pubs":20,"pubmed_search_name":null,"pager":null,"home_phone":null,"fax":null,"created_id":null,"birth_date":null,"num_first_pubs":1,"mailcode":null,"last_pubmed_search":null,"home_department_id":107,"first_name":"Michael","created_ip":null,"updated_id":null,"password":null,"num_extraunit_collaborators":81,"last_name":"Abecassis","consecutive_login_failures":0,"campus":"Chicago","suffix":null,"state":null,"num_intraunit_collaborators_last_five_years":7,"num_first_pubs_last_five_years":1,"num_extraunit_collaborators_last_five_years":58,"middle_name":"M I","lab_phone":null,"email":"mabecass@nmh.org","created_at":"2010-06-03T15:38:49Z"}},{"investigator":{"updated_ip":null,"start_date":null,"last_login_failure":null,"end_date":null,"degrees":"PhD","city":null,"address1":null,"updated_at":"2010-06-28T02:44:55Z","pubmed_limit_to_institution":false,"postal_code":null,"deleted_id":null,"appointment_basis":"FT","address2":null,"title":"Professor","last_successful_login":null,"deleted_ip":null,"ssn":null,"password_changed_id":null,"num_last_pubs_last_five_years":14,"nu_start_date":null,"deleted_at":null,"weekly_hours_min":35,"username":"ciancio","total_pubs_last_five_years":21,"password_changed_ip":null,"country":null,"business_phone":null,"appointment_type":"Regular","appointment_track":"Investigator","num_intraunit_collaborators":1,"id":61,"employee_id":1001653,"total_pubs":77,"sex":null,"password_changed_at":null,"num_last_pubs":24,"pubmed_search_name":null,"pager":null,"home_phone":null,"fax":null,"created_id":null,"birth_date":null,"num_first_pubs":4,"mailcode":null,"last_pubmed_search":null,"home_department_id":30,"first_name":"Nicholas","created_ip":null,"updated_id":null,"password":null,"num_extraunit_collaborators":6,"last_name":"Cianciotto","consecutive_login_failures":0,"campus":"Chicago","suffix":null,"state":null,"num_intraunit_collaborators_last_five_years":0,"num_first_pubs_last_five_years":3,"num_extraunit_collaborators_last_five_years":0,"middle_name":null,"lab_phone":null,"email":null,"created_at":"2010-06-03T15:38:50Z"}},{"investigator":{"updated_ip":null,"start_date":null,"last_login_failure":null,"end_date":null,"degrees":"MD","city":null,"address1":null,"updated_at":"2010-06-28T02:44:58Z","pubmed_limit_to_institution":false,"postal_code":null,"deleted_id":null,"appointment_basis":"EM","address2":null,"title":"Professor, Emer","last_successful_login":null,"deleted_ip":null,"ssn":null,"password_changed_id":null,"num_last_pubs_last_five_years":0,"nu_start_date":null,"deleted_at":null,"weekly_hours_min":35,"username":"mdalcant","total_pubs_last_five_years":8,"password_changed_ip":null,"country":null,"business_phone":null,"appointment_type":"Emeritus","appointment_track":"N/A","num_intraunit_collaborators":12,"id":77,"employee_id":1002042,"total_pubs":57,"sex":null,"password_changed_at":null,"num_last_pubs":0,"pubmed_search_name":null,"pager":null,"home_phone":null,"fax":null,"created_id":null,"birth_date":null,"num_first_pubs":1,"mailcode":null,"last_pubmed_search":null,"home_department_id":56,"first_name":"Mauro","created_ip":null,"updated_id":null,"password":null,"num_extraunit_collaborators":8,"last_name":"Dal Canto","consecutive_login_failures":0,"campus":"Off","suffix":null,"state":null,"num_intraunit_collaborators_last_five_years":5,"num_first_pubs_last_five_years":0,"num_extraunit_collaborators_last_five_years":3,"middle_name":"C","lab_phone":null,"email":null,"created_at":"2010-06-03T15:38:50Z"}}]')
end

def publications_response
body = %q([{"abstract":{"updated_id":null,"journal_abbreviation":"BMC Res Notes","is_last_author_investigator":false,"deposited_date":"2010-01-19","deleted_id":null,"created_at":"2010-07-23T21:53:56Z","updated_ip":null,"title":"A collection of bioconductor methods to visualize gene-list annotations.","mesh":"","isbn":null,"deleted_ip":null,"citation_last_get_at":null,"updated_at":"2010-07-23T21:53:56Z","publication_date":"2010-01-01","journal":"BMC research notes","is_first_author_investigator":false,"is_cancer":true,"deleted_at":null,"citation_url":null,"url":"","publication_type":"Journal Article","full_authors":"Feng, Gang\nDu, Pan\nKrett, Nancy L\nTessel, Michael\nRosen, Steven\nKibbe, Warren A\nLin, Simon M","abstract":"ABSTRACT: BACKGROUND: Gene-list annotations are critical for researchers to explore the complex relationships between genes and functionalities. Currently, the annotations of a gene list are usually summarized by a table or a barplot. As such, potentially biologically important complexities such as one gene belonging to multiple annotation categories are difficult to extract. We have devised explicit and efficient visualization methods that provide intuitive methods for interrogating the intrinsic connections between biological categories and genes. FINDINGS: We have constructed a data model and now present two novel methods in a Bioconductor package, \"GeneAnswers\", to simultaneously visualize genes, concepts (a.k.a. annotation categories), and concept-gene connections (a.k.a. annotations): the \"Concept-and-Gene Network\" and the \"Concept-and-Gene Cross Tabulation\". These methods have been tested and validated with microarray-derived gene lists. CONCLUSIONS: These new visualization methods can effectively present annotations using Gene Ontology, Disease Ontology, or any other user-defined gene annotations that have been pre-associated with an organism's genome by human curation, automated pipelines, or a combination of the two. The gene-annotation data model and associated methods are available in the Bioconductor package called \"GeneAnswers \" described in this publication.","publication_status":"epublish","id":122,"endnote_citation":"%0 Journal Article\n%A Feng, G.\n%A Du, P.\n%A Krett, N. L.\n%A Tessel, M.\n%A Rosen, S.\n%A Kibbe, W. A.\n%A Lin, S. M.\n%D 2010\n%T A collection of bioconductor methods to visualize gene-list annotations.\n%J BMC Res Notes\n%V 3\n%P 10\n%M 20180973\n%U http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&db=PubMed&dopt=Citation&list_uids=20180973\n%X ABSTRACT: BACKGROUND: Gene-list annotations are critical for researchers to explore the complex relationships between genes and functionalities. Currently, the annotations of a gene list are usually summarized by a table or a barplot. As such, potentially biologically important complexities such as one gene belonging to multiple annotation categories are difficult to extract. We have devised explicit and efficient visualization methods that provide intuitive methods for interrogating the intrinsic connections between biological categories and genes. FINDINGS: We have constructed a data model and now present two novel methods in a Bioconductor package, \"GeneAnswers\", to simultaneously visualize genes, concepts (a.k.a. annotation categories), and concept-gene connections (a.k.a. annotations): the \"Concept-and-Gene Network\" and the \"Concept-and-Gene Cross Tabulation\". These methods have been tested and validated with microarray-derived gene lists. CONCLUSIONS: These new visualization methods can effectively present annotations using Gene Ontology, Disease Ontology, or any other user-defined gene annotations that have been pre-associated with an organism's genome by human curation, automated pipelines, or a combination of the two. The gene-annotation data model and associated methods are available in the Bioconductor package called \"GeneAnswers \" described in this publication.\n%+ Northwestern University Biomedical Informatics Center (NUBIC, part of the Northwestern CTSA) and The Robert H, Lurie Comprehensive Cancer Center, Northwestern University, Chicago, IL 60611, USA. s-lin2@northwestern.edu.","volume":"3","pages":"10","year":"2010","issue":"","issn":null,"pubmed":"20180973","electronic_publication_date":"2010-02-26","citation_cnt":0,"authors":"Feng, G.\nDu, P.\nKrett, N. L.\nTessel, M.\nRosen, S.\nKibbe, W. A.\nLin, S. M.","status":"In-Data-Review","created_id":null,"created_ip":null}},{"abstract":{"updated_id":null,"journal_abbreviation":"Bioinformatics","is_last_author_investigator":false,"deposited_date":null,"deleted_id":null,"created_at":"2010-07-23T21:55:29Z","updated_ip":null,"title":"From disease ontology to disease-ontology lite: statistical methods to adapt a general-purpose ontology for the test of gene-ontology associations.","mesh":"Computational Biology/*methods;\nData Interpretation, Statistical;\nDatabase Management Systems;\nDatabases, Genetic/classification;\nDisease/*genetics;\nGenome;\nTerminology as Topic;\n*Vocabulary, Controlled","isbn":null,"deleted_ip":null,"citation_last_get_at":null,"updated_at":"2010-07-23T21:55:29Z","publication_date":"2009-06-15","journal":"Bioinformatics (Oxford, England)","is_first_author_investigator":false,"is_cancer":true,"deleted_at":null,"citation_url":null,"url":"","publication_type":"Journal Article","full_authors":"Du, Pan\nFeng, Gang\nFlatow, Jared\nSong, Jie\nHolko, Michelle\nKibbe, Warren A\nLin, Simon M","abstract":"Subjective methods have been reported to adapt a general-purpose ontology for a specific application. For example, Gene Ontology (GO) Slim was created from GO to generate a highly aggregated report of the human-genome annotation. We propose statistical methods to adapt the general purpose, OBO Foundry Disease Ontology (DO) for the identification of gene-disease associations. Thus, we need a simplified definition of disease categories derived from implicated genes. On the basis of the assumption that the DO terms having similar associated genes are closely related, we group the DO terms based on the similarity of gene-to-DO mapping profiles. Two types of binary distance metrics are defined to measure the overall and subset similarity between DO terms. A compactness-scalable fuzzy clustering method is then applied to group similar DO terms. To reduce false clustering, the semantic similarities between DO terms are also used to constrain clustering results. As such, the DO terms are aggregated and the redundant DO terms are largely removed. Using these methods, we constructed a simplified vocabulary list from the DO called Disease Ontology Lite (DOLite). We demonstrated that DOLite results in more interpretable results than DO for gene-disease association tests. The resultant DOLite has been used in the Functional Disease Ontology (FunDO) Web application at http://www.projects.bioinformatics.northwestern.edu/fundo.","publication_status":"ppublish","id":125,"endnote_citation":"%0 Journal Article\n%A Du, P.\n%A Feng, G.\n%A Flatow, J.\n%A Song, J.\n%A Holko, M.\n%A Kibbe, W. A.\n%A Lin, S. M.\n%D 2009\n%T From disease ontology to disease-ontology lite: statistical methods to adapt a general-purpose ontology for the test of gene-ontology associations.\n%J Bioinformatics\n%V 25\n%N 12\n%P i63-i68\n%M 19478018\n%U http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&db=PubMed&dopt=Citation&list_uids=19478018\n%X Subjective methods have been reported to adapt a general-purpose ontology for a specific application. For example, Gene Ontology (GO) Slim was created from GO to generate a highly aggregated report of the human-genome annotation. We propose statistical methods to adapt the general purpose, OBO Foundry Disease Ontology (DO) for the identification of gene-disease associations. Thus, we need a simplified definition of disease categories derived from implicated genes. On the basis of the assumption that the DO terms having similar associated genes are closely related, we group the DO terms based on the similarity of gene-to-DO mapping profiles. Two types of binary distance metrics are defined to measure the overall and subset similarity between DO terms. A compactness-scalable fuzzy clustering method is then applied to group similar DO terms. To reduce false clustering, the semantic similarities between DO terms are also used to constrain clustering results. As such, the DO terms are aggregated and the redundant DO terms are largely removed. Using these methods, we constructed a simplified vocabulary list from the DO called Disease Ontology Lite (DOLite). We demonstrated that DOLite results in more interpretable results than DO for gene-disease association tests. The resultant DOLite has been used in the Functional Disease Ontology (FunDO) Web application at http://www.projects.bioinformatics.northwestern.edu/fundo.\n%K Computational Biology/*methods\n%K Data Interpretation, Statistical\n%K Database Management Systems\n%K Databases, Genetic/classification\n%K Disease/*genetics\n%K Genome\n%K Terminology as Topic\n%K *Vocabulary, Controlled\n%+ The Biomedical Informatics Center, Northwestern University, Chicago, IL 60611, USA.","volume":"25","pages":"i63-i68","year":"2009","issue":"12","issn":null,"pubmed":"19478018","electronic_publication_date":"2009-05-30","citation_cnt":0,"authors":"Du, P.\nFeng, G.\nFlatow, J.\nSong, J.\nHolko, M.\nKibbe, W. A.\nLin, S. M.","status":"MEDLINE","created_id":null,"created_ip":null}}])
create_response(body)
end


def create_response(body)
  mock_model(Net::HTTPOK, :body => body)
end